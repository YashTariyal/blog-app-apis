spring.application.name=blog-app-apis
spring.datasource.url=jdbc:mysql://localhost:3306/blog_app_apis
spring.datasource.username=root
spring.datasource.password=root1234
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql=true
spring.datasource.hikari.maximum-pool-size=10
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update

logging.level.org.springframework.security=DEBUG
spring.security.user.name=yt
spring.security.user.password=yt123
spring.security.user.roles=ADMIN

# Debug logging for Spring Cloud Stream
logging.level.org.springframework.cloud.stream=DEBUG
logging.level.org.springframework.integration=DEBUG
logging.level.org.springframework.kafka=DEBUG
logging.level.com.codewithyash.blog=DEBUG

#Kafka Config
spring.cloud.stream.kafka.binder.brokers=localhost:9092

# Consumer configuration
spring.cloud.stream.kafka.binder.configuration.spring.json.trusted.packages=*
spring.cloud.stream.kafka.binder.configuration.spring.json.use.type.headers=false
spring.cloud.stream.kafka.binder.configuration.spring.json.value.default.type=com.codewithyash.blog.payloads.UserDto

# Consumer specific configuration
spring.cloud.stream.bindings.userEventReceiver-in-0.consumer.auto-startup=true
spring.cloud.stream.bindings.userEventReceiver-in-0.consumer.concurrency=1
spring.cloud.stream.bindings.userEventReceiver-in-0.consumer.maxAttempts=3

# Search Configuration
app.search.default-page-size=10
app.search.max-results=100
app.search.suggestions-limit=10
app.search.enable-fuzzy-search=true

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=demo@gmail.com
spring.mail.password=demo1234
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

# Email Templates Configuration
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/email/


spring.cloud.stream.bindings.userCreatedEvent-out-0.destination=user.created
spring.cloud.stream.bindings.userCreatedEvent-out-0.content-type=application/json
spring.cloud.stream.bindings.userCreatedEvent-out-0.group=${spring.application.name}

spring.cloud.stream.bindings.postCreatedEvent-out-0.destination=post.created
spring.cloud.stream.bindings.postCreatedEvent-out-0.content-type=application/json
spring.cloud.stream.bindings.postCreatedEvent-out-0.group=${spring.application.name}


spring.cloud.function.definition=userEventReceiver
spring.cloud.stream.bindings.userEventReceiver-in-0.destination=user.created
spring.cloud.stream.bindings.userEventReceiver-in-0.content-type=application/json
spring.cloud.stream.bindings.userEventReceiver-in-0.group=${spring.application.name}

springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
